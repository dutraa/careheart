const SerialPort = require('serialport')
const Readline = require('@serialport/parser-readline')

class Signal {
    static frequency_Hz = 100
    static length_sec = 7
    static length_samples = Signal.frequency_Hz * Signal.length_sec

    constructor() {
    }

    readFromDevice(port, tickCallback, finishedCallback) {
	const po = new SerialPort(port)
	const parser = po.pipe(new Readline({ delimiter: '\r\n' }))
	var x = 0
	var data = []
	parser.on('data', (line) => {
	    const y = parseInt(line)
	    if ((y > 0) && (y < 1000)) {
		data.push(y)
		x += 1
		tickCallback(x)
	    }
	    if (x > Signal.length_samples) {
		parser.destroy()
		finishedCallback(data)
	    }
	})	
    }

    simulate() {
	return [ 953,  951,  949,  948,  950,  950,  951,  948,  946,  944,  947,
        947,  947,  943,  944,  943,  943,  944,  944,  947,  946,  946,
        945,  950,  951,  953,  952,  954,  957,  961,  963,  964,  965,
        964,  966,  971,  974,  973,  973,  972,  973,  976,  977,  975,
        976,  975,  976,  979,  980,  976,  976,  974,  976,  981,  981,
        979,  977,  977,  975,  978,  978,  979,  976,  973,  974,  976,
        976,  974,  972,  971,  970,  971,  974,  971,  969,  970,  969,
        972,  974,  973,  973,  971,  971,  971,  973,  970,  967,  965,
        967,  969,  969,  969,  966,  965,  965,  966,  969,  968,  965,
        965,  964,  965,  965,  966,  965,  965,  967,  967,  969,  970,
        968,  971,  972,  977,  979,  979,  978,  979,  978,  984,  985,
        988,  989,  987,  990,  994,  995,  991,  989,  986,  986,  992,
        995,  994,  993,  996, 1000, 1002,  994,  986,  981,  978,  973,
        976,  970,  967,  966,  964,  966,  966,  967,  966,  965,  961,
        963,  965,  964,  964,  963,  958,  962,  964,  965,  964,  961,
        960,  963,  963,  962,  962,  957,  954,  945,  940,  934,  926,
        921,  927,  953,  993, 1028, 1074, 1134, 1193, 1232, 1244, 1214,
       1139, 1039,  960,  927,  932,  949,  956,  953,  948,  950,  952,
        953,  953,  951,  948,  951,  949,  949,  949,  945,  945,  945,
        950,  950,  950,  949,  948,  949,  951,  952,  951,  950,  947,
        947,  950,  952,  951,  951,  949,  948,  950,  948,  949,  946,
        947,  948,  947,  952,  949,  948,  947,  949,  953,  951,  949,
        951,  948,  950,  950,  954,  951,  954,  949,  950,  952,  952,
        951,  950,  947,  948,  949,  952,  949,  949,  945,  947,  949,
        950,  948,  946,  946,  946,  949,  951,  950,  950,  949,  951,
        951,  953,  952,  952,  951,  952,  954,  960,  961,  961,  963,
        967,  969,  971,  970,  972,  972,  976,  977,  980,  979,  978,
        979,  979,  982,  981,  981,  980,  978,  979,  980,  980,  981,
        980,  979,  980,  979,  981,  978,  974,  975,  979,  979,  980,
        979,  978,  976,  978,  981,  980,  976,  978,  975,  975,  976,
        976,  973,  974,  970,  973,  975,  974,  971,  968,  966,  967,
        970,  968,  969,  969,  965,  968,  967,  971,  970,  968,  966,
        970,  972,  972,  970,  967,  968,  966,  971,  971,  971,  969,
        968,  972,  972,  973,  972,  969,  968,  971,  977,  978,  979,
        977,  978,  981,  986,  987,  988,  990,  990,  994,  995, 1000,
        999, 1000,  995,  992,  993,  994,  995,  993,  992,  992,  994,
       1002, 1003, 1000,  990,  988,  985,  985,  982,  978,  973,  974,
        973,  973,  969,  969,  969,  967,  969,  971,  970,  967,  964,
        964,  965,  967,  965,  962,  961,  964,  963,  967,  967,  967,
        963,  962,  956,  949,  942,  933,  923,  922,  939,  965,  990,
       1010, 1032, 1069, 1115, 1168, 1208, 1233, 1244, 1231, 1178, 1093,
       1008,  951,  933,  944,  959,  966,  962,  957,  956,  957,  957,
        958,  955,  954,  953,  955,  956,  958,  956,  954,  951,  952,
        955,  960,  958,  957,  957,  958,  958,  959,  958,  955,  951,
        952,  955,  957,  955,  950,  950,  952,  955,  954,  953,  953,
        950,  948,  953,  950,  950,  952,  952,  952,  955,  956,  954,
        953,  951,  952,  954,  954,  953,  950,  951,  952,  952,  953,
        952,  948,  949,  947,  948,  950,  949,  948,  946,  948,  947,
        947,  949,  949,  948,  950,  949,  947,  948,  946,  947,  952,
        954,  955,  955,  955,  956,  959,  965,  966,  965,  967,  967,
        970,  973,  972,  972,  972,  968,  971,  974,  978,  978,  978,
        975,  974,  974,  976,  976,  974,  972,  974,  977,  980,  979,
        975,  973,  973,  973,  972,  973,  968,  966,  970,  970,  976,
        973,  969,  969,  970,  970,  971,  970,  969,  968,  967,  968,
        968,  965,  961,  960,  962,  965,  964,  965,  966,  960,  960,
        960,  960,  963,  962,  961,  962,  964,  964,  964,  960,  957,
        959,  963,  962,  962,  961,  960,  962,  964,  965,  964,  961,
        962,  961,  960,  965,  963,  962,  960,  962,  965,  968,  968,
        969,  971,  972,  978,  979,  981,  978,  978,  981,  983,  988,
        987,  985,  983,  985,  984,  986,  982,  980,  979,  985,  985,
        986,  984,  984,  987,  990,  992,  989,  982,  978,  973,  971,
        967,  966,  966,  961,  959,  959,  960,  960,  959,  956,  954,
        955,  955,  958,  958,  959,  956,  956,  956,  959,  958,  957,
        955,  956,  958,  960,  960,  958,  955,  952,  946,  942,  934,
        929,  920,  913,  916,  932,  961,  990, 1026, 1074, 1128, 1178,
       1212, 1219, 1190, 1122, 1037,  969,  932,  923,  926,  935,  944,
        945,  942,  945,  941,  944,  944,  944,  943,  939,  939,  941,
        941,  945,  944,  943,  945,  943,  945,  944,  945,  941,  939,
        942,  944,  943,  943,  941,  939,  940,  942,  941,  941,  938,
        935,  939,  937,  940,  940,  938,  936,  939,  941,  944,  942,
        940,  939,  940,  942,  942,  940,  939,  937,  938,  938,  941,
        939,  939,  936,  939,  941,  942,  941,  940,  935,  935,  940,
        940,  939,  936,  936,  935,  938,  936,  933,  931,  930,  931,
        935,  932,  931,  930,  928,  928,  930,  934,  932,  933,  934,
        940,  945,  949,  948,  952,  952,  956,  961,  965,  965,  966,
        964,  967,  968,  972,  973,  972,  972,  973,  974,  977,  977,
        978,  975,  977,  980,  980,  976,  975,  975,  975,  978,  978,
        976,  973,  973,  972,  975,  975,  974,  971,  972,  973,  974,
        974,  974,  972,  971,  970,  971,  973,  970,  971,  967,  971,
        973,  974,  971,  969,  969,  970,  966,  967,  967,  965,  964,
        964,  967,  970,  968,  966,  963,  966,  967,  969,  968,  966,
        965,  966,  968,  968,  967,  969,  968,  970,  971,  971,  970,
        971,  969,  968,  969,  971,  973,  969,  968,  974,  976,  977,
        979,  977,  975,  980,  983,  985,  987,  985,  985,  988,  993,
        994,  996,  995,  994,  995,  995,  994,  993,  991,  989,  992,
        996,  996,  991,  988,  990,  994, 1000, 1005, 1001,  993,  983,
        982,  980,  980,  976,  970,  965,  967,  968,  968,  969,  968,
        964,  967,  968,  967,  966,  966,  962,  961,  962,  963,  964,
        963,  962,  960,  964,  966,  963,  961,  956,  954,  948,  943,
        941,  931,  923,  926,  940,  970, 1002, 1032, 1073, 1130, 1184,
	   1230, 1255, 1260, 1236, 1175, 1089, 1010,  954,  931,  932];
    }
    
    simulate2() {
	var data = []
	for (var i = 0; i < Signal.length_samples; i++) {
        const isOn = Math.floor(10*i/Signal.frequency_Hz) % 10 > 7
	    data.push(isOn ? 1000 : 0)
	}
	return data
    }
    
}

module.exports = Signal
